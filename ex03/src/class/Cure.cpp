/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Cure.cpp                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: cpoulain <cpoulain@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/03/31 18:14:11 by cpoulain          #+#    #+#             */
/*   Updated: 2025/03/31 18:40:04 by cpoulain         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../../includes/Cure.hpp"

/* -------------------------------------------------------------------------- */
/*                                Constructors                                */
/* -------------------------------------------------------------------------- */

Cure::Cure(void): AMateria("cure") { }

Cure::Cure(const Cure &o): AMateria(o._type) { }

/* -------------------------------------------------------------------------- */
/*                                 Destructors                                */
/* -------------------------------------------------------------------------- */

Cure::~Cure(void) { }

/* -------------------------------------------------------------------------- */
/*                        Assignement operator overload                       */
/* -------------------------------------------------------------------------- */

Cure	&Cure::operator=(const Cure &o)
{
	*static_cast<AMateria *>(this) = o;
	return (*this);
}

/* -------------------------------------------------------------------------- */
/*                              Public functions                              */
/* -------------------------------------------------------------------------- */

Cure	*Cure::clone(void) const
{
	return (new Cure(*this));
}

/* -------------------------------------------------------------------------- */
/*                               Public methdos                               */
/* -------------------------------------------------------------------------- */

void	Cure::use(ICharacter &target) const
{
	std::cout << "* heals " << target.getName() << "'s wounds *" << std::endl;
}
