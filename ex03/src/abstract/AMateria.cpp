/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   AMateria.cpp                                       :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: cpoulain <cpoulain@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/03/31 17:48:47 by cpoulain          #+#    #+#             */
/*   Updated: 2025/03/31 18:36:23 by cpoulain         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../../includes/AMateria.hpp"

/* -------------------------------------------------------------------------- */
/*                                Constructors                                */
/* -------------------------------------------------------------------------- */

AMateria::AMateria(const std::string &type): _type(type) { }

AMateria::AMateria(const AMateria &o)
{
	*this = o;
}

/* -------------------------------------------------------------------------- */
/*                                 Destructors                                */
/* -------------------------------------------------------------------------- */

AMateria::~AMateria(void) { }

/* -------------------------------------------------------------------------- */
/*                        Assignement operator overload                       */
/* -------------------------------------------------------------------------- */

AMateria			&AMateria::operator=(AMateria const &aMateria)
{
	this->_type = aMateria._type;
	return (*this);
}

/* -------------------------------------------------------------------------- */
/*                              Public functions                              */
/* -------------------------------------------------------------------------- */

const std::string	&AMateria::getType(void) const
{
	return (this->_type);
}

/* -------------------------------------------------------------------------- */
/*                               Public methods                               */
/* -------------------------------------------------------------------------- */

void	AMateria::use(ICharacter &target) const
{
	std::cout << "* Using " << _type << " materia on " << target.getName()
		<< " *" << std::endl;
}
